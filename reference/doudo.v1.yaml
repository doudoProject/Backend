openapi: 3.0.0
info:
  title: Doudo Project API Doc.
  version: '1.0'
  description: ''
servers:
  - url: 'https://doudo.run.goorm.io'
paths:
  /v1/auth/signup:
    post:
      summary: Sign Up
      operationId: post-v1-auth-signup
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  success:
                    type: boolean
                  userInfo:
                    type: object
                    properties:
                      permission:
                        type: number
                      _id:
                        type: string
                      userid:
                        type: string
                      email:
                        type: string
                      password:
                        type: string
                      name:
                        type: string
                      __v:
                        type: number
              examples:
                예제 1:
                  value:
                    success: true
                    userInfo:
                      permission: 0
                      _id: 5fa94b8a04c8320d5a345865
                      userid: user1
                      email: gorae02@gmail.com
                      password: $2a$10$5V4WRQdyvaau7B0l/NX7O.DS1xHw7ysESlm9fMGwi5oMSwXuHrhLe
                      name: 유저1
                      __v: 0
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userid:
                  type: string
                email:
                  type: string
                password:
                  type: string
                name:
                  type: string
        description: ''
      security: []
  /v1/auth/signin:
    post:
      summary: Sign In
      operationId: post-v1-auth-signin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type:
                      - string
                      - 'null'
                  accessToken:
                    type:
                      - string
                      - 'null'
              examples:
                로그인 실패:
                  value:
                    success: false
                    message: 아이디나 패스워드가 일치하지 않습니다
                로그인 성공:
                  value:
                    success: true
                    accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmYTk0YjhhMDRjODMyMGQ1YTM0NTg2NSIsIm5hbWUiOiLsnKDsoIAxIiwiaWF0IjoxNjA0OTMwOTM5LCJleHAiOjE2MDQ5MzgxMzl9.6brPYHmqZCFSVQOAwqC9qCaGJByBH1dYj1Zc8Sp1SBg
      description: Sign In
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userid:
                  type: string
                password:
                  type: string
            examples:
              예제 1:
                value:
                  userid: user001
                  password: string
      security: []
      tags:
        - Auth
components:
  schemas:
    User:
      title: User
      type: object
      description: 이용자 모델입니다
      x-examples:
        아직 그룹이 없는 경우:
          userid: user1
          email: email@email.com
          password: some_encrypted_string
          name: 이름
          permission: 0
        그룹 있는경우:
          userid: user1
          email: email@email.com
          password: some_encrypted_string
          name: 이름
          group: 1
          permission: 0
      properties:
        userid:
          type: string
        email:
          type: string
        password:
          type: string
        name:
          type: string
        group:
          type:
            - number
            - 'null'
        permission:
          type: integer
          default: 0
      required:
        - userid
        - email
        - password
        - name
  securitySchemes:
    Access Token:
      name: Bearer
      type: apiKey
      in: header
      description: ''
tags:
  - name: Auth
security:
  - Access Token: []
